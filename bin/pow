#!/usr/bin/ruby

require 'rubygems'
require 'thor'
require 'fileutils'
require 'open-uri'


class Pow < Thor
  include Thor::Actions
  default_task :link

  map '-r' => 'restart'
  map '-l' => 'list'
  map '-L' => 'link'

  POWPATH = "/Users/#{`whoami`.chomp}/.pow"

  desc "link", "link a pow"
  def link(name=nil)
    return unless is_powable?
    current_path = %x{pwd}.chomp
    symink_path = "#{POWPATH}/#{name || File.basename(current_path)}"
    FileUtils.ln_s(current_path, symink_path) unless File.exists?(symink_path)
  end

  desc "restart", "restart current pow"
  def restart
    return unless is_powable?
    FileUtils.mkdir_p('tmp')
    %x{touch tmp/restart.txt}
  end

  desc "list", "list current pows"
  def list
    Dir[POWPATH + "/*"].map { |a| $stdout.puts File.basename(a) }
  end

  desc "remove", "remove a pow"
  def remove(name=nil)
    return unless is_powable?
    FileUtils.rm POWPATH + '/' + (name || File.basename(%x{pwd}.chomp))
  end

  desc "install", "Installs pow"
  def install
    %x{curl get.pow.cx | sh}
  end

  desc "uninstall", "Uninstalls pow"
  def uninstall
    %x{curl get.pow.cx/uninstall.sh | sh}
  end

  private

  def is_powable?
    if File.exists?('config.ru') || File.exists?('public/index.html')
      true
    else
      say "This does not appear to be a rack app as there is no config.ru."
      say "If you are in a Rails 2 application, try https://gist.github.com/909308"
      say "Pow can also host static apps if there is an index.html in public/"
      if yes? "Do you want to autogenerate a basic config.ru for Rails 2?"
        create_file "config.ru",  open("https://gist.github.com/909308.txt").read
      else
        false
      end
    end
  end
end
Pow.start
